version: '3.8'

services:
  server:
    build:
      context: .
      dockerfile: docker/DockerfileServer
    volumes:
      - .:/app
    ports:
      - "${PORT:-8080}:${PORT:-8080}"
    env_file:
      - .env
    restart: always

  db:
    build:
      context: .
      dockerfile: docker/DockerfilePostgres
      args:
        POSTGRES_DB: ${DB_NAME:-db}
        POSTGRES_USER: ${DB_USER:-user}
        POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
    environment:
      POSTGRES_DB: ${DB_NAME:-db}
      POSTGRES_USER: ${DB_USER:-user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
    ports:
      - "${DB_PORT:-8001}:${DB_PORT:-8001}"
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always

  redis:
    build:
      context: .
      dockerfile: docker/DockerfileRedis
    ports:
      - "${REDIS_PORT:-8002}:${REDIS_PORT:-8002}"
    env_file:
      - .env
    restart: always

  s3:
    build:
      context: .
      dockerfile: docker/DockerfileS3
    environment:
      MINIO_ACCESS_KEY: ${S3_ACCESS_KEY:-minioadmin}
      MINIO_SECRET_KEY: ${S3_SECRET_KEY:-minioadmin}
    ports:
      - "8003:8003"
    volumes:
      - s3data:/data
    env_file:
      - .env
    restart: always

  telegram:
    build:
      context: .
      dockerfile: docker/DockerfileTelegram
    volumes:
      - .:/app
    env_file:
      - .env
    ports:
      - "8010:8010"
    environment:
      BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
    restart: always

  prometheus:
    build:
      context: .
      dockerfile: docker/DockerfilePrometheus
    ports:
      - "8005:8005"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./config/recording_rules.yml:/etc/prometheus/recording_rules.yml
    environment:
      PROMETHEUS_CONFIG_FILE: ${PROMETHEUS_CONFIG_FILE:-/etc/prometheus/prometheus.yml}
      PROMETHEUS_STORAGE_PATH: ${PROMETHEUS_STORAGE_PATH:-/prometheus}
    env_file:
      - .env
    restart: always

  grafana:
    build:
      context: .
      dockerfile: docker/DockerfileGrafana
    container_name: ad_engine_grafana
    ports:
      - "8004:8004"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/provisioning:/etc/grafana/provisioning
      - ./config/dashboards:/config/dashboards
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD:-prod_2025}
      GF_SERVER_HTTP_PORT: ${GF_SERVER_HTTP_PORT:-8004}
    depends_on:
      - prometheus
    env_file:
      - .env
    restart: always

volumes:
  s3data:
  grafana_data:
  postgres_data: